{"ast":null,"code":"var _jsxFileName = \"/home/desafree/social333/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport { auth } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig/firebaseConfig\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    post\n  } = location.state;\n  const [user, setUser] = useState();\n  const [post2, setPost2] = useState(location.state);\n  const {\n    id\n  } = useParams();\n  const docRef = doc(db, 'posts', id);\n  getDoc(docRef);\n  const unsub = onSnapshot(doc(db, \"posts\", id), doc => {\n    console.log(doc.data());\n    console.log(post2);\n  });\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  }); // console.log(post)\n\n  function deletePost() {\n    const docRef = doc(db, 'posts', post.post.id);\n    deleteDoc(docRef).then(() => {\n      console.log('deleted');\n      navigate('/');\n    });\n  }\n\n  function commentPost(e) {\n    e.preventDefault();\n    let date = new Date();\n    let dateString = date.toString();\n    const commentForm = document.querySelector('form');\n    const newComment = {\n      content: commentForm.comment.value,\n      user: user.email,\n      time: dateString\n    };\n    console.log(post.post.comments, newComment);\n    const newComments = post.post.comments.concat(newComment);\n    console.log(newComments);\n\n    if (user) {\n      const docRef = doc(db, 'posts', post.post.id);\n      updateDoc(docRef, {\n        comments: newComments\n      }).then(() => {\n        console.log('added comment');\n        commentForm.reset();\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"prova \", post.post.title, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.post.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: post.post.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: post.post.upvote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this) : post.post.user === user.email ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deletePost,\n      children: \"right user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 70\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"invalid user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 121\n    }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }, this) : post.post.user === user.email ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/update\",\n      state: {\n        post: {\n          post\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 111\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 70\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"invalid user, cant edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 147\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.post.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: comment.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      onSubmit: commentPost,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: [\"Comment as \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"comment\",\n        id: \"comment\",\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Log in to comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"X6WXPrd2+Rc7JqHcEwA9eAA7x20=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/desafree/social333/src/pages/Post.js"],"names":["useParams","useLocation","auth","deleteDoc","doc","getDoc","onSnapshot","db","useNavigate","Link","updateDoc","useState","onAuthStateChanged","Post","navigate","location","post","state","user","setUser","post2","setPost2","id","docRef","unsub","console","log","data","currentUser","deletePost","then","commentPost","e","preventDefault","date","Date","dateString","toString","commentForm","document","querySelector","newComment","content","comment","value","email","time","comments","newComments","concat","reset","title","upvote","map"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport { auth } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc,doc,getDoc,onSnapshot} from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig/firebaseConfig\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\n\n\n\n\nconst Post = () => {\n\n    const navigate = useNavigate()\n    const location = useLocation()\n    const {post} = location.state\n    const [user,setUser] = useState()\n    const [post2,setPost2] = useState(location.state)\n    \n    const {id} = useParams()\n    const docRef = doc(db,'posts',id)\n    getDoc(docRef)\n\n    const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n            console.log(doc.data())\n            console.log(post2)\n    });\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    });\n\n    // console.log(post)\n\n    function deletePost() {\n        const docRef = doc(db,'posts',post.post.id)\n        deleteDoc(docRef).then(()=>{\n            console.log('deleted')\n            navigate('/')\n        })\n\n    }\n\n    function commentPost(e) {\n        e.preventDefault()\n        let date = new Date()\n        let dateString = date.toString()\n\n        const commentForm = document.querySelector('form')\n        const newComment = {content:commentForm.comment.value, user:user.email, time:dateString}\n\n        console.log(post.post.comments,newComment)\n\n        const newComments = post.post.comments.concat(newComment)\n\n        console.log(newComments)\n        \n        if(user) {\n            const docRef = doc(db,'posts',post.post.id)\n\n            updateDoc(docRef,{comments:newComments}).then(()=>{\n                console.log('added comment')\n                commentForm.reset()\n            })\n        }\n    }\n\n\n    return ( \n        <div>\n            prova {post.post.title}\n            <h1>{post.post.title}</h1>\n            <h2>{post.post.user}</h2>\n            <p>{post.post.content}</p>\n            <h6>{post.post.time}</h6>\n            <h6>{post.post.upvote}</h6>\n            {(!user)? <div></div> : (post.post.user === user.email)? <button onClick={deletePost}>right user</button> : <button>invalid user</button>}\n            {(!user)? <div></div> : (post.post.user === user.email)? <Link to='/update' state={{post:{post}}}><button>Edit post</button></Link> : <button>invalid user, cant edit</button>}\n            {/* {(post.post.user === auth.currentUser.email)? <button onClick={deletePost}>right user</button> : <button>invalid user</button>}\n            {(post.post.user === auth.currentUser.email)? <Link to='/update' state={{post:{post}}}><button>Edit post</button></Link> : <button>invalid user, cant edit</button>} */}\n            <div>\n                {post.post.comments.map((comment)=>{\n                    return (<div>\n                            <h4 >{comment.user}</h4>\n                            <p>{comment.content}</p>\n                            <p>{comment.time}</p>\n                        </div>)\n                    \n                })}\n            </div>\n            {(user)?<form action=\"#\" onSubmit={commentPost}>\n                <label htmlFor=\"comment\">Comment as {user.email}</label>\n                <textarea name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\n                <button>Comment</button>\n            </form>:<p>Log in to comment</p>}\n            \n        </div>\n     );\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}