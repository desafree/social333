{"ast":null,"code":"var _jsxFileName = \"/home/desafree/social333/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation, useNavigate } from \"react-router\";\nimport { auth, db } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc, doc, getDoc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport PostComment from \"../component/PostComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const navigate = useNavigate(); // const location = useLocation()\n  // const {post} = location.state\n\n  const [user, setUser] = useState();\n  const [post, setPost] = useState();\n  const {\n    id\n  } = useParams(); // const docRef = doc(db,'posts',id)\n  // getDoc(docRef)\n  // const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n  //     setPost(doc.data())\n  //     console.log(doc.data(),post)\n  // });\n\n  useEffect(() => {\n    let unsub = onSnapshot(doc(db, \"posts\", id), doc => {\n      let postsContainer = doc.data();\n      console.log(postsContainer);\n\n      if (post !== postsContainer) {\n        setPost(postsContainer);\n        console.log(post);\n      }\n    });\n    return () => unsub();\n  }, []);\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  }); // console.log(post)\n\n  function deletePost() {\n    const docRef = doc(db, 'posts', post.id);\n    deleteDoc(docRef).then(() => {\n      console.log('deleted');\n      navigate('/');\n    });\n  }\n\n  function commentPost(e) {\n    e.preventDefault();\n    let date = new Date();\n    let dateString = date.toString();\n    const commentForm = document.querySelector('form');\n    console.log(commentForm.comment.value, user.email, dateString);\n    const newComment = {\n      content: commentForm.comment.value,\n      user: user.email,\n      time: dateString\n    };\n    console.log(newComment);\n    const newComments = post.comments.concat(newComment);\n\n    if (user) {\n      console.log(post);\n      const docRef = doc(db, 'posts', id);\n      updateDoc(docRef, {\n        comments: newComments\n      }).then(() => {\n        console.log('added comment');\n        commentForm.reset();\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: post.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: post.upvote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }, this) : post.user === user.email ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \"right user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 65\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"invalid user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 116\n      }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }, this) : post.user === user.email ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/update\",\n        state: {\n          post: {\n            post\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 106\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 65\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"invalid user, cant edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 142\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.comments.map((comment, index) => {\n          return /*#__PURE__*/_jsxDEV(PostComment, {\n            comment: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        onSubmit: commentPost,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: [\"Comment as \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"comment\",\n          id: \"comment\",\n          cols: \"30\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Log in to comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"prova2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"bRGfy3bQ/kqkYt271Yjk9BJa98k=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/desafree/social333/src/pages/Post.js"],"names":["useParams","useLocation","useNavigate","auth","db","deleteDoc","doc","getDoc","onSnapshot","updateDoc","Link","useState","useEffect","onAuthStateChanged","PostComment","Post","navigate","user","setUser","post","setPost","id","unsub","postsContainer","data","console","log","currentUser","deletePost","docRef","then","commentPost","e","preventDefault","date","Date","dateString","toString","commentForm","document","querySelector","comment","value","email","newComment","content","time","newComments","comments","concat","reset","title","upvote","map","index"],"mappings":"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","sourcesContent":["import { useParams,useLocation,useNavigate } from \"react-router\";\nimport { auth,db } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc,doc,getDoc,onSnapshot,updateDoc} from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport { useState,useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport PostComment from \"../component/PostComment\";\n\n\n\n\n\n\nconst Post = () => {\n\n    const navigate = useNavigate()\n    // const location = useLocation()\n    // const {post} = location.state\n    const [user,setUser] = useState()\n    const [post,setPost] = useState()\n    \n    const {id} = useParams()\n    // const docRef = doc(db,'posts',id)\n    // getDoc(docRef)\n    \n\n    // const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n    //     setPost(doc.data())\n    //     console.log(doc.data(),post)\n    // });\n\n    useEffect(()=>{\n        let unsub = onSnapshot(doc(db, \"posts\", id),(doc)=>{\n            let postsContainer = doc.data()\n            console.log(postsContainer)\n            if(post!==postsContainer){\n                setPost(postsContainer)\n                console.log(post)\n            }\n        });\n        return ()=> unsub();\n    },[]);\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    });\n\n    // console.log(post)\n\n    function deletePost() {\n        const docRef = doc(db,'posts',post.id)\n        deleteDoc(docRef).then(()=>{\n            console.log('deleted')\n            navigate('/')\n        })\n\n    }\n\n    function commentPost(e) {\n        e.preventDefault()\n        let date = new Date()\n        let dateString = date.toString()\n\n        const commentForm = document.querySelector('form')\n        console.log(commentForm.comment.value, user.email, dateString)\n        const newComment = {content:commentForm.comment.value, user:user.email, time:dateString}\n        console.log(newComment)\n\n        const newComments = post.comments.concat(newComment)\n        \n        if(user) {\n            console.log(post)\n            const docRef = doc(db,'posts',id)\n\n            updateDoc(docRef,{comments:newComments}).then(()=>{\n                console.log('added comment')\n                commentForm.reset()\n            })\n        }\n    }\n\n\n    return ( \n        <div>\n            {(post)?<div><h1>{post.title}</h1>\n            <h2>{post.user}</h2>\n            <p>{post.content}</p>\n            <h6>{post.time}</h6>\n            <h6>{post.upvote}</h6>\n            {(!user)? <div></div> : (post.user === user.email)? <button onClick={deletePost}>right user</button> : <button>invalid user</button>}\n            {(!user)? <div></div> : (post.user === user.email)? <Link to='/update' state={{post:{post}}}><button>Edit post</button></Link> : <button>invalid user, cant edit</button>}\n            \n            <div>\n                {post.comments.map((comment,index)=>{\n                    return (<PostComment comment={comment}></PostComment>)\n                })}\n            </div>\n            {(user)?<form action=\"#\" onSubmit={commentPost}>\n                <label htmlFor=\"comment\">Comment as {user.email}</label>\n                <textarea name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\n                <button>Comment</button>\n            </form>:<p>Log in to comment</p>}</div>:<div>prova2</div>}\n            \n        </div>\n     );\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}