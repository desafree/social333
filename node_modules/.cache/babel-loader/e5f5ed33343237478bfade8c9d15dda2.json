{"ast":null,"code":"var _jsxFileName = \"/home/desafree/social33/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport { onSnapshot } from 'firebase/firestore';\nimport { useEffect, useState } from 'react';\nimport { colRef } from '../firebaseConfig/firebaseConfig';\nimport { auth } from '../firebaseConfig/firebaseConfig';\nimport Post from '../component/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [posts, setPosts] = useState();\n  const [orderedPost, setOrderedPost] = useState();\n  useEffect(() => {\n    let unsubscribe = onSnapshot(colRef, snapshot => {\n      let postsContainer = [];\n      snapshot.docs.forEach(doc => {\n        postsContainer.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setPosts(postsContainer);\n      console.log(posts);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  function changeOrder(e) {\n    setOrderedPost(posts);\n\n    if (e.target.textContent === 'Top') {\n      let newPostarray = posts.sort((a, b) => {\n        if (a.upvote > b.upvote) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setOrderedPost(newPostarray);\n    } else if (e.target.textContent === 'New') {\n      let newPostarray = posts.sort((a, b) => {\n        if (a.time > b.time) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setOrderedPost(newPostarray);\n    } else if (e.target.textContent === 'Old') {\n      let newPostarray = posts.sort((a, b) => {\n        if (a.time < b.time) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setOrderedPost(newPostarray);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          changeOrder(e);\n        },\n        children: \"Top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          changeOrder(e);\n        },\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          changeOrder(e);\n        },\n        children: \"Old\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts && orderedPost.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"cwGXhi+3sw4o3lvJym1SaP7wxYU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/desafree/social33/src/pages/Home.js"],"names":["onSnapshot","useEffect","useState","colRef","auth","Post","Home","posts","setPosts","orderedPost","setOrderedPost","unsubscribe","snapshot","postsContainer","docs","forEach","doc","push","data","id","console","log","changeOrder","e","target","textContent","newPostarray","sort","a","b","upvote","time","map","post"],"mappings":"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","sourcesContent":["import {onSnapshot} from 'firebase/firestore'\nimport { useEffect, useState } from 'react';\nimport { colRef } from '../firebaseConfig/firebaseConfig'\nimport { auth } from '../firebaseConfig/firebaseConfig';\nimport Post from '../component/Post';\n\nconst Home = () => {\n\n    const [posts, setPosts] = useState()\n\n    const [orderedPost,setOrderedPost] = useState()\n\n    useEffect(()=>{\n        let unsubscribe = onSnapshot(colRef,(snapshot)=>{\n            let postsContainer = []\n            snapshot.docs.forEach(doc=>{\n                postsContainer.push({...doc.data(),id:doc.id})\n            })\n            setPosts(postsContainer)\n            console.log(posts)\n        });\n        return ()=> unsubscribe();\n    },[]);\n\n    function changeOrder(e) {\n        setOrderedPost(posts)\n        if(e.target.textContent==='Top') {\n            let newPostarray = posts.sort((a,b)=>{\n                if(a.upvote>b.upvote) {\n                    return true\n                }\n                else{\n                    return false\n                }\n            })\n\n            setOrderedPost(newPostarray)\n        }\n        else if(e.target.textContent==='New') {\n            let newPostarray = posts.sort((a,b)=>{\n                if(a.time>b.time) {\n                    return true\n                }\n                else{\n                    return false\n                }\n            })\n\n            setOrderedPost(newPostarray)\n        }\n        else if(e.target.textContent==='Old') {\n            let newPostarray = posts.sort((a,b)=>{\n                if(a.time<b.time) {\n                    return true\n                }\n                else{\n                    return false\n                }\n            })\n\n            setOrderedPost(newPostarray)\n        }\n    }\n    \n\n    return ( \n        <div>\n            <div>\n                <button onClick={(e)=>{\n                    changeOrder(e)\n                }}>Top</button>\n                <button onClick={(e)=>{\n                    changeOrder(e)\n                }}>New</button>\n                <button onClick={(e)=>{\n                    changeOrder(e)\n                }}>Old</button>\n            </div>\n            <div>\n                {posts && orderedPost.map((post)=>{\n                    return <Post post={post} key={post.id} />\n                })}\n            </div>\n        </div>\n        \n    );\n}\n \nexport default Home;"]},"metadata":{},"sourceType":"module"}