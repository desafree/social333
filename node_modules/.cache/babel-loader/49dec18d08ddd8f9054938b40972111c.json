{"ast":null,"code":"var _jsxFileName = \"/home/desafree/social333/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport { auth } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig/firebaseConfig\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const navigate = useNavigate(); // const location = useLocation()\n  // const {post} = location.state\n\n  const [user, setUser] = useState();\n  const [post, setPost] = useState();\n  const {\n    id\n  } = useParams(); // const docRef = doc(db,'posts',id)\n  // getDoc(docRef)\n  // const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n  //     setPost(doc.data())\n  //     console.log(doc.data(),post)\n  // });\n\n  useEffect(() => {\n    let unsub = onSnapshot(doc(db, \"posts\", id), doc => {\n      setPost(doc.data());\n      console.log(post);\n    });\n    return () => unsub();\n  }, []);\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  }); // console.log(post)\n\n  function deletePost() {\n    const docRef = doc(db, 'posts', post.id);\n    deleteDoc(docRef).then(() => {\n      console.log('deleted');\n      navigate('/');\n    });\n  }\n\n  function commentPost(e) {\n    e.preventDefault();\n    let date = new Date();\n    let dateString = date.toString();\n    const commentForm = document.querySelector('form');\n    const newComment = {\n      content: commentForm.comment.value,\n      user: user.email,\n      time: dateString\n    };\n    console.log(post.comments, newComment);\n    const newComments = post.comments.concat(newComment);\n    console.log(newComments);\n\n    if (user) {\n      const docRef = doc(db, 'posts', post.id);\n      updateDoc(docRef, {\n        comments: newComments\n      }).then(() => {\n        console.log('added comment');\n        commentForm.reset();\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"bRGfy3bQ/kqkYt271Yjk9BJa98k=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/desafree/social333/src/pages/Post.js"],"names":["useParams","useLocation","auth","deleteDoc","doc","getDoc","onSnapshot","db","useNavigate","Link","updateDoc","useState","onAuthStateChanged","useEffect","Post","navigate","user","setUser","post","setPost","id","unsub","data","console","log","currentUser","deletePost","docRef","then","commentPost","e","preventDefault","date","Date","dateString","toString","commentForm","document","querySelector","newComment","content","comment","value","email","time","comments","newComments","concat","reset"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport { auth } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc,doc,getDoc,onSnapshot} from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig/firebaseConfig\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect } from \"react\";\n\n\n\n\n\nconst Post = () => {\n\n    const navigate = useNavigate()\n    // const location = useLocation()\n    // const {post} = location.state\n    const [user,setUser] = useState()\n    const [post,setPost] = useState()\n    \n    const {id} = useParams()\n    // const docRef = doc(db,'posts',id)\n    // getDoc(docRef)\n    \n\n    // const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n    //     setPost(doc.data())\n    //     console.log(doc.data(),post)\n    // });\n\n    useEffect(()=>{\n        let unsub = onSnapshot(doc(db, \"posts\", id),(doc)=>{\n            setPost(doc.data())\n            console.log(post)\n        });\n        return ()=> unsub();\n    },[]);\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    });\n\n    // console.log(post)\n\n    function deletePost() {\n        const docRef = doc(db,'posts',post.id)\n        deleteDoc(docRef).then(()=>{\n            console.log('deleted')\n            navigate('/')\n        })\n\n    }\n\n    function commentPost(e) {\n        e.preventDefault()\n        let date = new Date()\n        let dateString = date.toString()\n\n        const commentForm = document.querySelector('form')\n        const newComment = {content:commentForm.comment.value, user:user.email, time:dateString}\n\n        console.log(post.comments,newComment)\n\n        const newComments = post.comments.concat(newComment)\n\n        console.log(newComments)\n        \n        if(user) {\n            const docRef = doc(db,'posts',post.id)\n\n            updateDoc(docRef,{comments:newComments}).then(()=>{\n                console.log('added comment')\n                commentForm.reset()\n            })\n        }\n    }\n\n\n    return ( \n        <div>\n            {/* prova {post.title}\n            <h1>{post.title}</h1>\n            <h2>{post.user}</h2>\n            <p>{post.content}</p>\n            <h6>{post.time}</h6>\n            <h6>{post.upvote}</h6>\n            {(!user)? <div></div> : (post.user === user.email)? <button onClick={deletePost}>right user</button> : <button>invalid user</button>}\n            {(!user)? <div></div> : (post.user === user.email)? <Link to='/update' state={{post:{post}}}><button>Edit post</button></Link> : <button>invalid user, cant edit</button>}\n            \n            <div>\n                {post.comments.map((comment)=>{\n                    return (<div>\n                            <h4 >{comment.user}</h4>\n                            <p>{comment.content}</p>\n                            <p>{comment.time}</p>\n                        </div>)\n                    \n                })}\n            </div>\n            {(user)?<form action=\"#\" onSubmit={commentPost}>\n                <label htmlFor=\"comment\">Comment as {user.email}</label>\n                <textarea name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\n                <button>Comment</button>\n            </form>:<p>Log in to comment</p>}\n             */}\n        </div>\n     );\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}