{"ast":null,"code":"var _jsxFileName = \"/home/desafree/social33/src/pages/CreateImg.js\",\n    _s = $RefreshSig$();\n\nimport { addDoc } from \"firebase/firestore\";\nimport { colRef } from \"../firebaseConfig/firebaseConfig\";\nimport { auth } from \"../firebaseConfig/firebaseConfig\";\nimport { storage } from \"../firebaseConfig/firebaseConfig\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateImg = () => {\n  _s();\n\n  const navigate = useNavigate();\n\n  async function createPost(url) {\n    const formRef = document.querySelector('form');\n\n    if (auth.currentUser) {\n      const title = formRef.title.value;\n      const content = formRef.content.value;\n      const date = new Date();\n      let dateText = date.toString();\n      addDoc(colRef, {\n        title: title,\n        content: content,\n        time: dateText,\n        upvote: 1,\n        user: auth.currentUser.email,\n        url: url\n      }).then(() => {\n        formRef.reset();\n        console.log('added');\n        navigate('/');\n      });\n    } else {\n      console.log('not logged in');\n    }\n  }\n\n  const storageFile = e => {\n    //\n    e.preventDefault();\n    const formRef = document.querySelector('form');\n    let file = formRef.image.files[0];\n    console.log(file);\n    if (!file) return;\n    const sotrageRef = ref(storage, `files/${file.name}`);\n    const uploadTask = uploadBytesResumable(sotrageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n    }, error => console.log(error), () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        console.log(downloadURL);\n        createPost(downloadURL.toString());\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/create',\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: e => {\n        storageFile(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateImg, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateImg;\nexport default CreateImg;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateImg\");","map":{"version":3,"sources":["/home/desafree/social33/src/pages/CreateImg.js"],"names":["addDoc","colRef","auth","storage","Link","useNavigate","ref","uploadBytesResumable","getDownloadURL","CreateImg","navigate","createPost","url","formRef","document","querySelector","currentUser","title","value","content","date","Date","dateText","toString","time","upvote","user","email","then","reset","console","log","storageFile","e","preventDefault","file","image","files","sotrageRef","name","uploadTask","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","error","downloadURL"],"mappings":"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","sourcesContent":["import { addDoc } from \"firebase/firestore\";\nimport { colRef } from \"../firebaseConfig/firebaseConfig\";\nimport { auth } from \"../firebaseConfig/firebaseConfig\";\nimport { storage } from \"../firebaseConfig/firebaseConfig\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\n\nimport { ref,uploadBytesResumable,getDownloadURL } from \"firebase/storage\";\n\nconst CreateImg = () => {\n\n    const navigate = useNavigate()\n    \n    async function createPost(url) {\n\n        const formRef = document.querySelector('form')\n\n        if(auth.currentUser) {\n\n            const title = formRef.title.value\n            const content = formRef.content.value\n            const date = new Date();\n            let dateText = date.toString()\n    \n            addDoc(colRef,{\n                title:title,\n                content: content,\n                time: dateText,\n                upvote:1,\n                user:auth.currentUser.email,\n                url:url\n            }).then(()=>{\n                formRef.reset()\n                console.log('added')\n                navigate('/')\n            })\n        }\n        else{\n            console.log('not logged in')\n        }\n\n    }\n\n\n    const storageFile = (e) => {\n        //\n        e.preventDefault()\n        const formRef = document.querySelector('form')\n        let file = formRef.image.files[0]\n        console.log(file)\n\n        if (!file) return;\n        const sotrageRef = ref(storage, `files/${file.name}`);\n        const uploadTask = uploadBytesResumable(sotrageRef, file);\n    \n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            const prog = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n          },\n          (error) => console.log(error),\n          () => {\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                console.log(downloadURL)\n                createPost(downloadURL.toString())\n\n            });\n          }\n        );\n      };\n    \n    return ( \n        <div>\n            <Link to={'/create'}>Create post</Link>\n            <form action=\"\" onSubmit={(e)=>{\n                storageFile(e)\n            }}>\n                <input type=\"text\" name=\"title\"/>\n                <input type=\"text\" name=\"content\"/>\n                <input type=\"file\" name=\"image\"/>\n                <button>Submit</button>\n            </form>\n        </div>\n     );\n}\n \nexport default CreateImg;"]},"metadata":{},"sourceType":"module"}