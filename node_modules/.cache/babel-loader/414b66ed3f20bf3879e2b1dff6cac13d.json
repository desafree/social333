{"ast":null,"code":"var _jsxFileName = \"/home/desafree/social333/src/pages/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation, useNavigate } from \"react-router\";\nimport { auth, db } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc, doc, getDoc, onSnapshot, updateDoc } from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport PostComment from \"../component/PostComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const navigate = useNavigate(); // const location = useLocation()\n  // const {post} = location.state\n\n  const [user, setUser] = useState();\n  const [post, setPost] = useState();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const upvoteNumber = location.state.upvote;\n  const downvoteNumber = location.state.downvote;\n  console.log(upvoteNumber, downvoteNumber); // const docRef = doc(db,'posts',id)\n  // getDoc(docRef)\n  // const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n  //     setPost(doc.data())\n  //     console.log(doc.data(),post)\n  // });\n\n  useEffect(() => {\n    let unsub = onSnapshot(doc(db, \"posts\", id), doc => {\n      let postsContainer = doc.data();\n\n      if (post !== postsContainer) {\n        setPost(postsContainer);\n      }\n    });\n    return () => unsub();\n  }, []);\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  }); // console.log(post)\n\n  function deletePost() {\n    const docRef = doc(db, 'posts', id);\n    deleteDoc(docRef).then(() => {\n      console.log('deleted');\n      navigate('/');\n    });\n  }\n\n  function commentPost(e) {\n    e.preventDefault();\n    let date = new Date();\n    let dateString = date.toString();\n    const commentForm = document.querySelector('form');\n    console.log(commentForm.comment.value, user.email, dateString);\n    const newComment = {\n      content: commentForm.comment.value,\n      user: user.email,\n      time: dateString\n    };\n    console.log(newComment);\n    const newComments = post.comments.concat(newComment);\n\n    if (user) {\n      console.log(post);\n      const docRef = doc(db, 'posts', id);\n      updateDoc(docRef, {\n        comments: newComments\n      }).then(() => {\n        console.log('added comment');\n        commentForm.reset();\n      });\n    }\n  }\n\n  const [like, setLike] = useState(0);\n  const [unlike, setUnlike] = useState(0);\n\n  function upvote() {\n    const docRef = doc(db, 'posts', id);\n    const newUpvote = post.upvote + 1;\n\n    if (like == 0 && unlike == 0) {\n      updateDoc(docRef, {\n        upvote: newUpvote\n      }).then(() => {\n        setLike(1);\n      });\n    } else if (like == 0 && unlike == 1) {\n      updateDoc(docRef, {\n        upvote: newUpvote + 1\n      }).then(() => {\n        setLike(1);\n        setUnlike(0);\n      });\n    }\n\n    const upvoteElement = document.querySelector('.upvote');\n    upvoteElement.style.backgroundColor = 'green';\n    const downvoteElement = document.querySelector('.downvote');\n    downvoteElement.style.backgroundColor = 'white';\n  }\n\n  function downvote() {\n    const docRef = doc(db, 'posts', id);\n    const newUpvote = post.upvote - 1;\n\n    if (like == 0 && unlike == 0) {\n      updateDoc(docRef, {\n        upvote: newUpvote\n      }).then(() => {\n        setUnlike(1);\n      });\n    } else if (like == 1 && unlike == 0) {\n      updateDoc(docRef, {\n        upvote: newUpvote - 1\n      }).then(() => {\n        setLike(0);\n        setUnlike(1);\n      });\n    }\n\n    const upvoteElement = document.querySelector('.upvote');\n    upvoteElement.style.backgroundColor = 'white';\n    const downvoteElement = document.querySelector('.downvote');\n    downvoteElement.style.backgroundColor = 'red';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: post.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: post.upvote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }, this) : post.user === user.email ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \"delete post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 65\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"invalid user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 117\n      }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }, this) : post.user === user.email ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/update\",\n        state: {\n          post: post,\n          id: id\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 110\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 65\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"invalid user, cant edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 146\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: upvote,\n        className: \"upvote\",\n        children: \"Upvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downvote,\n        className: \"downvote\",\n        children: \"downvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.comments.map((comment, index) => {\n          return /*#__PURE__*/_jsxDEV(PostComment, {\n            comment: comment,\n            index: index,\n            id: id,\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        onSubmit: commentPost,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: [\"Comment as \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"comment\",\n          id: \"comment\",\n          cols: \"30\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Log in to comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"prova2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"PPohFHgsZzflyhyaQIdNhD7LYYQ=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/desafree/social333/src/pages/Post.js"],"names":["useParams","useLocation","useNavigate","auth","db","deleteDoc","doc","getDoc","onSnapshot","updateDoc","Link","useState","useEffect","onAuthStateChanged","PostComment","Post","navigate","user","setUser","post","setPost","id","location","upvoteNumber","state","upvote","downvoteNumber","downvote","console","log","unsub","postsContainer","data","currentUser","deletePost","docRef","then","commentPost","e","preventDefault","date","Date","dateString","toString","commentForm","document","querySelector","comment","value","email","newComment","content","time","newComments","comments","concat","reset","like","setLike","unlike","setUnlike","newUpvote","upvoteElement","style","backgroundColor","downvoteElement","title","map","index"],"mappings":"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","sourcesContent":["import { useParams,useLocation,useNavigate } from \"react-router\";\nimport { auth,db } from \"../firebaseConfig/firebaseConfig\";\nimport { deleteDoc,doc,getDoc,onSnapshot,updateDoc} from \"firebase/firestore\";\nimport { Link } from \"react-router-dom\";\nimport { useState,useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport PostComment from \"../component/PostComment\";\n\n\n\n\n\n\n\nconst Post = () => {\n\n    const navigate = useNavigate()\n    // const location = useLocation()\n    // const {post} = location.state\n    const [user,setUser] = useState()\n    const [post,setPost] = useState()\n    \n    const {id} = useParams()\n\n    const location = useLocation()\n\n    const upvoteNumber = location.state.upvote\n    const downvoteNumber = location.state.downvote\n\n    console.log(upvoteNumber,downvoteNumber)\n    // const docRef = doc(db,'posts',id)\n    // getDoc(docRef)\n    \n\n    // const unsub = onSnapshot(doc(db, \"posts\", id), (doc) => {\n    //     setPost(doc.data())\n    //     console.log(doc.data(),post)\n    // });\n\n    useEffect(()=>{\n        let unsub = onSnapshot(doc(db, \"posts\", id),(doc)=>{\n            let postsContainer = doc.data()\n            if(post!==postsContainer){\n                setPost(postsContainer)\n            }\n        });\n        return ()=> unsub();\n    },[]);\n\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    });\n\n    // console.log(post)\n\n    function deletePost() {\n        const docRef = doc(db,'posts',id)\n        deleteDoc(docRef).then(()=>{\n            console.log('deleted')\n            navigate('/')\n        })\n\n    }\n\n    function commentPost(e) {\n        e.preventDefault()\n        let date = new Date()\n        let dateString = date.toString()\n\n        const commentForm = document.querySelector('form')\n        console.log(commentForm.comment.value, user.email, dateString)\n        const newComment = {content:commentForm.comment.value, user:user.email, time:dateString}\n        console.log(newComment)\n\n        const newComments = post.comments.concat(newComment)\n        \n        if(user) {\n            console.log(post)\n            const docRef = doc(db,'posts',id)\n\n            updateDoc(docRef,{comments:newComments}).then(()=>{\n                console.log('added comment')\n                commentForm.reset()\n            })\n        }\n    }\n\n    const [like,setLike] = useState(0)\n    const [unlike,setUnlike] = useState(0)\n\n    function upvote() {\n        const docRef = doc(db,'posts',id)\n        const newUpvote = post.upvote + 1\n\n        if(like==0 && unlike==0) {\n            updateDoc(docRef,{\n                upvote:newUpvote\n            }).then(()=>{\n                setLike(1)\n            })\n        }\n        else if(like==0 && unlike==1) {\n            updateDoc(docRef,{\n                upvote:newUpvote + 1\n            }).then(()=>{\n                setLike(1)\n                setUnlike(0)\n            })\n        }\n\n        const upvoteElement = document.querySelector('.upvote')\n        upvoteElement.style.backgroundColor = 'green'\n        const downvoteElement = document.querySelector('.downvote')\n        downvoteElement.style.backgroundColor = 'white'\n\n    }\n\n    function downvote() {\n\n        const docRef = doc(db,'posts',id)\n        const newUpvote = post.upvote - 1\n\n        if(like==0 && unlike==0) {\n            updateDoc(docRef,{\n                upvote:newUpvote\n            }).then(()=>{\n                setUnlike(1)\n            })\n        }\n        else if(like==1 && unlike==0) {\n            updateDoc(docRef,{\n                upvote:newUpvote - 1\n            }).then(()=>{\n                setLike(0)\n                setUnlike(1)\n            })\n        }\n\n        const upvoteElement = document.querySelector('.upvote')\n        upvoteElement.style.backgroundColor = 'white'\n        const downvoteElement = document.querySelector('.downvote')\n        downvoteElement.style.backgroundColor = 'red'\n    }\n\n\n    return ( \n        <div>\n            {(post)?<div><h1>{post.title}</h1>\n            <h2>{post.user}</h2>\n            <p>{post.content}</p>\n            <h6>{post.time}</h6>\n            <h6>{post.upvote}</h6>\n            {(!user)? <div></div> : (post.user === user.email)? <button onClick={deletePost}>delete post</button> : <button>invalid user</button>}\n            {(!user)? <div></div> : (post.user === user.email)? <Link to='/update' state={{post:post,id:id}}><button>Edit post</button></Link> : <button>invalid user, cant edit</button>}\n            \n            <button onClick={upvote} className=\"upvote\">Upvote</button>\n            <button onClick={downvote} className=\"downvote\">downvote</button>\n\n            <div>\n                {post.comments.map((comment,index)=>{\n                    return (<PostComment comment={comment} index={index} id={id} post={post}></PostComment>)\n                })}\n            </div>\n            {(user)?<form action=\"#\" onSubmit={commentPost}>\n                <label htmlFor=\"comment\">Comment as {user.email}</label>\n                <textarea name=\"comment\" id=\"comment\" cols=\"30\" rows=\"10\"></textarea>\n                <button>Comment</button>\n            </form>:<p>Log in to comment</p>}</div>:<div>prova2</div>}\n            \n        </div>\n     );\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}